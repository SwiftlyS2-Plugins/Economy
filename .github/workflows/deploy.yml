name: Deploy and Version

on:
  push:
    branches:
      - master
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
      - main
      - develop
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  version-and-build:
    name: Version and Build
    runs-on: ubuntu-latest

    outputs:
      semver: ${{ steps.gitversion.outputs.semVer }}
      fullsemver: ${{ steps.gitversion.outputs.fullSemVer }}
      nugetversion: ${{ steps.gitversion.outputs.nuGetVersion }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1.1.1
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Display GitVersion outputs
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
          echo "Major: ${{ steps.gitversion.outputs.major }}"
          echo "Minor: ${{ steps.gitversion.outputs.minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.patch }}"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore /p:Version=${{ steps.gitversion.outputs.fullSemVer }} /p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }} /p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} /p:InformationalVersion=${{ steps.gitversion.outputs.informationalVersion }}

      - name: Publish
        run: dotnet publish Economy/Economy.csproj --configuration Release --no-build --output ./publish

      - name: Create Release Archive
        run: |
          cd publish
          zip -r ../Economy-${{ steps.gitversion.outputs.semVer }}.zip .
          cd ..

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Economy-${{ steps.gitversion.outputs.semVer }}
          path: Economy-${{ steps.gitversion.outputs.semVer }}.zip
          retention-days: 30

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: version-and-build
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: Economy-${{ needs.version-and-build.outputs.semver }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.version-and-build.outputs.semver }}
          name: Release v${{ needs.version-and-build.outputs.semver }}
          draft: false
          prerelease: ${{ contains(needs.version-and-build.outputs.semver, '-') }}
          generate_release_notes: true
          files: |
            Economy-${{ needs.version-and-build.outputs.semver }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-prerelease:
    name: Deploy Pre-release
    runs-on: ubuntu-latest
    needs: version-and-build
    if: |
      github.event_name == 'push' &&
      (github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/hotfix/'))

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: Economy-${{ needs.version-and-build.outputs.semver }}

      - name: Create Pre-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.version-and-build.outputs.semver }}
          name: Pre-release v${{ needs.version-and-build.outputs.semver }}
          draft: false
          prerelease: true
          generate_release_notes: true
          files: |
            Economy-${{ needs.version-and-build.outputs.semver }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
